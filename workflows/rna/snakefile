import os
import pandas

num_workers = 8
project = 'card_rna_atlas'
r_packages = 'scripts/load_packages.r'

samples_list = '/data/CARD_singlecell/Brain_atlas/samples.332.20240809.csv'
envs = {'convert': 'envs/convert.yml', 'muon': 'envs/muon.yml', 'multiome': 'envs/multiome.yml'}

datasets = pandas.read_csv(samples_list)['sample'].tolist()
metrics = ['n_genes_by_counts', 'total_counts', 'pct_counts_mt', 'pct_counts_rb', 'doublet_score', 'counts_deviation_score']


localrules: all, plot_qc

rule all:
    input:
        'output/rna_filtered_metadata.csv'


rule preprocess:
    input:
        input_table=samples_list
    output:
        anndata='objects/01_{dataset}_anndata_object.h5ad'
    conda:
        envs['muon']
    params:
        sample='{dataset}', 
        data_root='/data/CARD_singlecell/brain_atlas_cellbender'
    resources:
        runtime=120, mem_mb=64000, disk_mb=10000, slurm_partition='quick' 
    script:
        'scripts/main/preprocess.py'

rule to_seurat:
    input:
        anndata='objects/01_{dataset}_anndata_object.h5ad'
    output:
        seurat='objects/01_{dataset}_seurat_object.rds'
    conda:
        envs['convert']
    params:
        packages=r_packages
    resources:
        runtime=120, mem_mb=64000, disk_mb=10000, slurm_partition='quick' 
    script:
        'scripts/main/to_seurat.R'

rule gmm_qc:
    input:
        seurat=expand('objects/01_{dataset}_seurat_object.rds', dataset=datasets)
    output:
        metadata='output/unfiltered_metadata.csv'
    params:
        project_name=project,
        packages=r_packages
    conda:
        envs['multiome']
    threads:
        num_workers
    resources:
        runtime=120, mem_mb=500000, disk_mb=10000, slurm_partition='largemem' 
    script:
        'scripts/main/gmm_qc.R'

rule plot_qc:
    input:
        metadata='output/unfiltered_metadata.csv'
    output:
        plot_1='plots/qc_plot1.png', plot_2='plots/qc_plot2.png', 
        plot_3='plots/qc_plot3.png', plot_4='plots/qc_plot4.png'
    params:
        noise=metrics,
        packages=r_packages,
        project_name=project
    conda:
        envs['multiome']
    script:
        'scripts/main/plot_qc_metrics.R'

rule filter:
    input:
        metadata='output/unfiltered_metadata.csv',        
        seurat='objects/01_{dataset}_seurat_object.rds'
    output:
        seurat='objects/02_{dataset}_seurat_object.rds'
    conda:
        envs['multiome']
    params:
        packages=r_packages
    resources:
        runtime=120, mem_mb=64000, disk_mb=10000, slurm_partition='quick' 
    script: 
        'scripts/main/filter.R'

rule process:
    input:
        seurat='objects/02_{dataset}_seurat_object.rds'
    output:
        seurat='objects/03_{dataset}_seurat_object.rds'
    conda:
        envs['multiome']
    params:
        packages=r_packages
    resources:
        runtime=120, mem_mb=64000, disk_mb=10000, slurm_partition='quick' 
    script:
        'scripts/main/process.R'

rule to_anndata:
    input:
        seurat='objects/03_{dataset}_seurat_object.rds'
    output:
        anndata='objects/02_{dataset}_anndata_object.h5ad'
    conda:
        envs['convert']
    resources:
        runtime=120, mem_mb=64000, disk_mb=10000, slurm_partition='quick' 
    script:
        'scripts/main/to_anndata.R'
    
rule merge_anndata:
    input:
        anndata=expand('objects/02_{dataset}_anndata_object.h5ad', dataset=datasets)
    output:
        anndata='objects/03_merged_anndata_object.h5ad'
    conda:
        envs['muon']
    resources:
        runtime=120, mem_mb=500000, disk_mb=10000, slurm_partition='largemem' 
    script:
        'scripts/main/merge_anndata.py'

rule get_metadata:
    input:
        anndata='objects/03_merged_anndata_object.h5ad'
    output:
        metadata='output/rna_filtered_metadata.csv'
    conda:
        envs['muon']
    resources:
        runtime=120, mem_mb=400000, disk_mb=10000, slurm_partition='largemem' 
    script:
        'scripts/main/export_metadata.py'
